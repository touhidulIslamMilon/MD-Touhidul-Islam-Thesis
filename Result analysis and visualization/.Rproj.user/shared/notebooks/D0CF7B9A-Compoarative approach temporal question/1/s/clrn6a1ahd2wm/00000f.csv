"0","# Load required libraries"
"0","library(readxl)"
"0","library(ggplot2)"
"0","library(tidyr)"
"0","library(zoo)  # For rolling averages"
"0","library(dplyr)  # For data manipulation"
"0",""
"0","# Step 1: Load data"
"0","filename <- ""Result/baseline_same_model.xlsx""  # Update the path if needed"
"0","berd <- read_excel(filename, sheet = ""transpose"")"
"0",""
"0","# Ensure first column is ""day"""
"0","names(berd)[1] <- ""day"""
"0",""
"0","# Convert to long format for ggplot"
"0","berd_long <- pivot_longer(berd, cols = -day, names_to = ""emotion"", values_to = ""score"")"
"0",""
"0","# Convert 'day' to Date format"
"0","berd_long$day <- as.Date(berd_long$day)"
"0",""
"0","# Step 2: Apply 7-day rolling average for each emotion"
"0","berd_long$rolling_score <- NA  # Create new column"
"0",""
"0","for (emo in unique(berd_long$emotion)) {"
"0","  idx <- berd_long$emotion == emo"
"0","  berd_long$rolling_score[idx] <- rollmean(berd_long$score[idx], k = 7, align = ""right"", fill = NA)"
"0","}"
"0",""
"0","# Step 3: Remove NA values created by rollmean"
"0","berd_long <- berd_long[!is.na(berd_long$rolling_score), ]"
"0",""
"0","# Step 4: Plot with ggplot2"
"0","ggplot(berd_long, aes(x = day, y = rolling_score, color = emotion, group = emotion)) +"
"0","  geom_line(linewidth = 1, linetype = ""solid"") +   # Use solid lines"
"0","  geom_point(size = 2, alpha = 0.6) +             # Add points for visibility"
"0","  labs(title = ""Emotion Trends (7-day Rolling Avg)"", "
"0","       y = ""Sentiment Score"", "
"0","       x = ""Day"") +"
"0","  theme_minimal() +"
"0","  scale_color_manual(values = rainbow(length(unique(berd_long$emotion))))  # Auto-generate colors"
